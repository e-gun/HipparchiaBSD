# this should get you a fedora31 installation

sudo dnf install git postgresql postgresql-server postgresql-contrib unzip tar bzip2 nano
sudo postgresql-setup initdb
sudo systemctl start postgresql
sudo systemctl enable postgresql


HIPPHOME="$HOME/hipparchia_venv"
SERVERPATH="$HIPPHOME/HipparchiaServer"
BUILDERPATH="$HIPPHOME/HipparchiaBuilder"
LOADERPATH="$HIPPHOME/HipparchiaSQLoader"
BSDPATH="$HIPPHOME/HipparchiaBSD"
MACPATH="$HIPPHOME/HipparchiaMacOS"
DATAPATH="$HIPPHOME/HipparchiaData"
THIRDPARTYPATH="$HIPPHOME/HipparchiaThirdPartySoftware"
EXTRAFONTPATH="$HIPPHOME/HipparchiaExtraFonts"
WINDOWSPATH="$HIPPHOME/HipparchiaWindows"
LEXDATAPATH="$HIPPHOME/HipparchiaLexicalData"
STATIC="$SERVERPATH/server/static"
TTF="$STATIC/ttf"
THEDB="hipparchiaDB"
CONFIGFILE="$SERVERPATH/server/settings/securitysettings.py"
HBACONF='/var/lib/pgsql/data/pg_hba.conf'
GIT='git'
SSL='openssl'

for dir in $HIPPHOME $SERVERPATH $BUILDERPATH $LOADERPATH $BSDPATH $DATAPATH $MACPATH $WINDOWSPATH $EXTRAFONTPATH $THIRDPARTYPATH $LEXDATAPATH; do /bin/mkdir $dir; done

cd $SERVERPATH && $GIT init && $GIT pull https://github.com/e-gun/HipparchiaServer.git
cd $BUILDERPATH && $GIT init && $GIT pull https://github.com/e-gun/HipparchiaBuilder.git
cd $LOADERPATH && $GIT init && $GIT pull https://github.com/e-gun/HipparchiaSQLoader.git
cd $BSDPATH && $GIT init && $GIT pull https://github.com/e-gun/HipparchiaBSD.git
cd $MACPATH && $GIT init && $GIT pull https://github.com/e-gun/HipparchiaMacOS.git
cd $THIRDPARTYPATH && $GIT init && $GIT pull https://github.com/e-gun/HipparchiaThirdPartySoftware.git
cd $EXTRAFONTPATH && $GIT init && $GIT pull https://github.com/e-gun/HipparchiaExtraFonts.git
cd $WINDOWSPATH && $GIT init && $GIT pull https://github.com/e-gun/HipparchiaWindows.git
cd $LEXDATAPATH && $GIT init && $GIT pull https://github.com/e-gun/HipparchiaLexicalData.git

python3 -m venv $HIPPHOME
source $HIPPHOME/bin/activate
$HIPPHOME/bin/pip3 install flask psycopg2-binary websockets
$HIPPHOME/bin/pip3 install cython scipy numpy gensim pyLDAvis matplotlib networkx
$HIPPHOME/bin/pip3 install scikit-learn

sudo -u postgres createdb -E UTF8 $THEDB
cp $BUILDERPATH/builder/sql/generate_hipparchia_dbs.sql /tmp

WRPASS=`${SSL} rand -base64 12`
RDPASS=`${SSL} rand -base64 12`
SKRKEY=`${SSL} rand -base64 24`
WRPASS=`echo ${WRPASS//[^[:word:]]/}`
RDPASS=`echo ${RDPASS//[^[:word:]]/}`
SKRKEY=`echo ${SKRKEY//[^[:word:]]/}`

sed "s/DBPASS = >>yourpasshere<</DBPASS = $WRPASS/" $BUILDERPATH/sample_config.ini > $BUILDERPATH/config.ini
sed "s/DBPASS = yourpasshere/DBPASS = $WRPASS/" $LOADERPATH/sample_config.ini > $LOADERPATH/config.ini

cp -rp $SERVERPATH/server/sample_settings $SERVERPATH/server/settings
sed -i "s/DBPASS = 'yourpassheretrytomakeitstrongplease'/DBPASS = '$RDPASS'/" $CONFIGFILE
sed -i "s/SECRET_KEY = 'yourkeyhereitshouldbelongandlooklikecryptographicgobbledygook'/SECRET_KEY = '$SKRKEY'/" $CONFIGFILE
sed -i "s/WRITEUSER = 'consider_re-using_HipparchiaBuilder_user'/WRITEUSER = 'hippa_wr'/" $CONFIGFILE
sed -i "s/DBWRITEPASS = 'consider_re-using_HipparchiaBuilder_pass'/DBWRITEPASS = '$WRPASS'/" $CONFIGFILE

cd /tmp
sudo -u postgres psql -d $THEDB -a -f /tmp/generate_hipparchia_dbs.sql
rm /tmp/generate_hipparchia_dbs.sql
sudo -u postgres psql -d $THEDB --command="ALTER ROLE hippa_wr WITH PASSWORD '$WRPASS';"
sudo -u postgres psql -d $THEDB --command="ALTER ROLE hippa_rd WITH PASSWORD '$RDPASS';"
echo "local  $THEDB   hippa_rd,hippa_wr                  password" >>  /tmp/hbconf
echo "host   $THEDB   hippa_rd,hippa_wr   127.0.0.1/32   password" >>  /tmp/hbconf
sudo cat $HBACONF >> /tmp/hbconf
sudo cp /tmp/hbconf $HBACONF
sudo chown postgres $HBACONF
sudo chgrp postgres $HBACONF
sudo chmod 600 $HBACONF
sudo rm /tmp/hbconf
sudo systemctl restart postgresql

cd $TTF
cp $THIRDPARTYPATH/minimal_installation/Noto*.zip $TTF/
ZIPLIST=`ls -1 $TTF/*.zip`
for Z in $ZIPLIST; do unzip -o $Z; done
DBLSUBDIRS=`ls -d -1 $TTF/*/*/*.ttf`
for D in $DBLSUBDIRS; do mv $D $TTF/; done
INSUBDIRS=`ls -d -1 $TTF/*/*.ttf`
for F in $INSUBDIRS; do mv $F $TTF/; done
SUBDIRS=`ls -d -1 $TTF/*/`
for S in $SUBDIRS; do rm -rf $S; done
rm $TTF/*zip
cd $STATIC/
cp $THIRDPARTYPATH/minimal_installation/jquery-3.4.1.min.js $STATIC/jquery.min.js
cp $THIRDPARTYPATH/minimal_installation/jquery-ui-1.12.1.zip $STATIC/
cp $THIRDPARTYPATH/minimal_installation/js.cookie.js $STATIC/
cp $THIRDPARTYPATH/vector_helpers/*.* $STATIC/
ZIPLIST=`ls -1 $STATIC/*.zip`
for Z in $ZIPLIST; do unzip -o $Z; done
rm $STATIC/*zip
rm $STATIC/*md
rm $STATIC/LICENSE
rm $STATIC/d3.js
mv $STATIC/d3.min.js $STATIC/jsd3.js
mv $STATIC/ldavis.v1.0.0.js $STATIC/jsforldavis.js
cp $STATIC/jquery-ui-1.12.1/j* $STATIC/
cp $STATIC/jquery-ui-1.12.1/images/*.png $STATIC/images/
rm -rf $STATIC/jquery-ui-1.12.1/

mkdir $DATAPATH/lexica/
cd $DATAPATH/lexica/
cp $LEXDATAPATH/*.gz $DATAPATH/lexica/
gunzip $DATAPATH/lexica/*.gz

cp $BSDPATH/selfupdate.sh $HIPPHOME
cp $BSDPATH/pipupgrade.sh $HIPPHOME

sudo cp $BSDPATH/hipparchia.service /etc/systemd/system/
sudo systemctl enable hipparchia
sudo systemctl start hipparchia
